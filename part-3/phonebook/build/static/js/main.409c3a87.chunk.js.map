{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/requests.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","searchName","setSearchName","value","onChange","event","target","PersonForm","newName","setNewName","newNumber","setNewNumber","handleAddPerson","e","onClick","Person","person","deletePerson","name","number","id","Persons","persons","console","log","map","baseUrl","axios","get","then","response","data","newObject","post","url","put","delete","App","useState","setPersons","useEffect","personService","initialPersons","filteredPersons","filter","toLowerCase","includes","preventDefault","names","personObject","message","yesUpdate","window","confirm","changedPerson","updatedPerson","updatePerson","find","p","returnedPerson","concat","addPerson","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAceA,EAXO,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAChC,OACI,oDACqB,uBAAOC,MAASF,EACjCG,SAAU,SAAAC,GAAK,OAAIH,EAAcG,EAAMC,OAAOH,cCkB3CI,EAtBW,SAAC,GAAqE,IAApEC,EAAmE,EAAnEA,QAASC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,gBACtE,OACI,iCACA,yCACQ,uBACET,MAASK,EACTJ,SAAY,SAACS,GAAD,OAAOJ,EAAWI,EAAEP,OAAOH,aAEjD,2CACU,uBACEA,MAASO,EACTN,SAAY,SAACS,GAAD,OAAOF,EAAaE,EAAEP,OAAOH,aAGrD,8BACE,wBAAQW,QAASF,EAAjB,uBCLKG,EAVO,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAC7B,OACA,+BACKD,EAAOE,KADZ,IACmBF,EAAOG,OACrB,wBAAQL,QAAS,kBAAMG,EAAaD,EAAOI,GAAIJ,EAAOE,OAAtD,oBAFL,QCYWG,EAdQ,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASL,EAAkB,EAAlBA,aAE9B,OADAM,QAAQC,IAAIF,GAERA,EAAQG,KAAI,SAAAT,GACR,OAAO,cAAC,EAAD,CAA0BA,OAAUA,EAAQC,aAAgBA,GAA/CD,EAAOE,UCJjCQ,EAAU,eAyBD,EAvBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAqB9B,EAlBA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAgB9B,EAbA,SAACX,EAAIY,GAChB,IAAME,EAAMR,EAAU,IAAMN,EAE5B,OADgBO,IAAMQ,IAAID,EAAKF,GAChBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAU9B,EAPM,SAACX,GAGlB,OADgBO,IAAMS,OAAOV,EAAU,IAAMN,GAC9BS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCkF9BM,EAhGH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACRhB,EADQ,KACCiB,EADD,OAEgBD,mBAAS,IAFzB,mBAER9B,EAFQ,KAECC,EAFD,OAGoB6B,mBAAS,IAH7B,mBAGR5B,EAHQ,KAGGC,EAHH,OAIsB2B,mBAAS,IAJ/B,mBAIRrC,EAJQ,KAIIC,EAJJ,KAWhBsC,qBAAU,WACRC,IAEGZ,MAAK,SAAAa,GACJH,EAAWG,QAEd,IAgDH,IAWMC,EAAkBrB,EAAQsB,QAAO,SAAC5B,GACtC,OAAOA,EAAOE,KAAK2B,cAAcC,SAAS7C,EAAW4C,kBAGvD,OACE,gCACE,2CACA,cAAC,EAAD,CAAQ5C,WAAYA,EAAYC,cAAeA,IAE/C,2CACA,cAAC,EAAD,CAAYM,QAASA,EAASC,WAAYA,EAAYC,UAAWA,EAAWC,aAAcA,EACvFC,gBAzDP,SAAyBC,GAGvBA,EAAEkC,iBAEF,IAeMC,EAAQ1B,EAAQG,KAAI,SAAAH,GAAO,OAAIA,EAAQJ,QACvC+B,EAAe,CAAC/B,KAAMV,EAASW,OAAQT,GAEzCsC,EAAMF,SAAStC,GAlBE,SAACyC,GACpB,IAAMC,EAAU1C,EAAS,yEACnB2C,EAAYC,OAAOC,QAAQH,GAC3BI,EAAa,2BAAOL,GAAP,IAAqB9B,OAAQT,IAE5CyC,GACFV,EACUa,EAAclC,GAAIkC,GACzBzB,MAAK,SAAA0B,GACJhB,EAAWjB,EAAQG,KAAI,SAAAT,GAAM,OAAIA,EAAOI,KAAOmC,EAAcnC,GAAKJ,EAASuC,SAWjFC,CADkBlC,EAAQmC,MAAK,SAAAC,GAAC,OAAIA,EAAExC,OAASV,MAlCjC,SAACyC,GACjBR,EACUQ,GACPpB,MAAK,SAAA8B,GACJpB,EAAWjB,EAAQsC,OAAOX,OAiC3BY,CAAUZ,GAEbxC,EAAW,IACXE,EAAa,OA8BX,yCACA,cAAC,EAAD,CAASW,QAASqB,EAAiB1B,aA1BlB,SAACG,EAAIF,GACxB,IAAMgC,EAAU,UAAYhC,EAAO,KACjBkC,OAAOC,QAAQH,KAE/BT,EACgBrB,GAChBmB,EAAWjB,EAAQsB,QAAO,SAAAc,GAAC,OAAIA,EAAEtC,KAAOA,cCrE/B0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.409c3a87.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport const Filter = ({searchName, setSearchName}) => {\r\n    return (\r\n        <div>\r\n            Search for name: <input value = {searchName} \r\n            onChange={event => setSearchName(event.target.value)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\n\r\nexport const PersonForm = ({newName, setNewName, newNumber, setNewNumber, handleAddPerson}) => {\r\n    return (\r\n        <form>\r\n        <div>\r\n          name: <input \r\n                  value = {newName}\r\n                  onChange = {(e) => setNewName(e.target.value)}/>\r\n        </div>\r\n        <div>\r\n          number: <input \r\n                    value = {newNumber}\r\n                    onChange = {(e) => setNewNumber(e.target.value)}\r\n            />\r\n        </div>\r\n        <div>\r\n          <button onClick={handleAddPerson}>add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\n\r\nexport const Person = ({ person, deletePerson }) => {\r\n    return (\r\n    <ul>\r\n        {person.name} {person.number} \r\n         <button onClick={() => deletePerson(person.id, person.name)}>delete</button> </ul>\r\n    \r\n    )\r\n}\r\n\r\n\r\nexport default Person\r\n","import React from 'react'\r\nimport Person from './Person'\r\n\r\nexport const Persons = ({persons, deletePerson}) => {\r\n    console.log(persons)\r\n    return (\r\n        persons.map(person => {\r\n            return <Person key={person.name} person = {person} deletePerson = {deletePerson}/>\r\n\r\n        })\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Persons\r\n","import axios from 'axios'\r\n\r\n// changed url to build\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const url = baseUrl + '/' + id\r\n    const request = axios.put(url, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    \r\n    const request = axios.delete(baseUrl + '/' + id)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, deletePerson }","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } from 'react-dom'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/requests'\n\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n\n\n\n\n\n  // fetch initial data\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  // add new person\n  const addPerson = (personObject) => {\n    personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(personObject))\n\n      })\n  }\n\n  // function to add new person\n  function handleAddPerson(e) {\n    // if you don't put this it re-renders from beginning (name is not added)\n    // this call prevents default action of submitting form (cause page to reload)\n    e.preventDefault()\n\n    const updatePerson = (personObject) => {\n      const message = newName +\" is already added to phonebook, replace the old number with a new one?\"\n      const yesUpdate = window.confirm(message)\n      const changedPerson = {...personObject, number: newNumber }\n\n      if (yesUpdate) {\n        personService\n          .update(changedPerson.id, changedPerson)\n          .then(updatedPerson => {\n            setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\n          })\n      }\n    }\n\n    // if name exists \n    const names = persons.map(persons => persons.name)\n    const personObject = {name: newName, number: newNumber}\n\n    if (names.includes(newName)) {\n      const oldPerson = persons.find(p => p.name === newName)\n      updatePerson(oldPerson) \n    } else {\n       addPerson(personObject) \n    }\n    setNewName('')\n    setNewNumber('')\n\n  }\n\n\n  const deletePerson = (id, name) => {\n    const message = \"Delete \" + name + \" ?\"\n    const yesDelete = window.confirm(message)\n    if (yesDelete) {\n      personService\n        .deletePerson(id)\n      setPersons(persons.filter(p => p.id !== id))\n    }\n  }\n  \n  // name to display\n  const filteredPersons = persons.filter((person) => {\n    return person.name.toLowerCase().includes(searchName.toLowerCase());\n  })\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Filter searchName={searchName} setSearchName={setSearchName}/>\n\n      <h2>add a new</h2>\n      <PersonForm newName={newName} setNewName={setNewName} newNumber={newNumber} setNewNumber={setNewNumber}\n         handleAddPerson={handleAddPerson}/>\n\n\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} deletePerson = {deletePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}